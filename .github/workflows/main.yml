name: Main

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  check:
    name: Check if Release Needed
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Commit Message
        id: check
        run: |
          MSG=$(git log -1 --pretty=%B)
          if [[ "$MSG" == chore:*release* ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "Skipping - this is a release commit"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release Packages
    needs: check
    if: needs.check.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Bump & Publish
        run: |
          set -e  # Exit on any error
          MSG=$(git log -1 --pretty=%B)
          
          # Determine bump type
          if echo "$MSG" | grep -qE "^feat.*!:|BREAKING CHANGE:"; then
            BUMP="major"
          elif echo "$MSG" | grep -qE "^feat(\(|:)"; then
            BUMP="minor"
          else
            BUMP="patch"
          fi
          
          # Get current version from pro package (use as source of truth)
          LATEST=$(npm view @spacedevin/react-mui-pro-multi-range-picker version 2>/dev/null || echo "0.0.0")
          IFS='.' read -r M N P <<< "$LATEST"
          case $BUMP in
            major) VER="$((M + 1)).0.0" ;;
            minor) VER="$M.$((N + 1)).0" ;;
            patch) VER="$M.$N.$((P + 1))" ;;
          esac
          
          echo "Publishing both packages at version: $VER (from $LATEST, bump: $BUMP)"
          
          # Free Package
          cd packages/MuiMultiDateRangePicker
          npm ci
          npm version $VER --no-git-tag-version
          npm run build
          npm publish --access public
          
          # Pro Package
          cd ../MuiMultiDateRangePickerPro
          npm ci
          npm version $VER --no-git-tag-version
          npm run build
          npm publish --access public
          
          # Commit and tag
          cd ../..
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/*/package*.json
          git commit -m "chore: release v$VER"
          git tag -a "v$VER" -m "Release v$VER"
          git push origin main --follow-tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: success()
        run: |
          VER=$(npm view @spacedevin/react-mui-pro-multi-range-picker version)
          
          gh release create "v$VER" \
            --title "v$VER" \
            --notes "**Packages Released:**
          
          - \`@spacedevin/react-mui-multi-range-picker@$VER\`
          - \`@spacedevin/react-mui-pro-multi-range-picker@$VER\`
          
          Published to NPM" \
            --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

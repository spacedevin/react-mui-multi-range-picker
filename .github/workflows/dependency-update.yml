name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - MuiMultiDateRangePicker
          - MuiMultiDateRangePickerPro
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check for Updates
        id: updates
        run: |
          cd packages/${{ matrix.package }}
          
          # Check for outdated packages
          OUTDATED=$(npm outdated --json || true)
          
          if [ "$OUTDATED" = "{}" ] || [ -z "$OUTDATED" ]; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No updates available for ${{ matrix.package }}"
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Updates available for ${{ matrix.package }}:"
            echo "$OUTDATED" | jq -r 'to_entries[] | "\(.key): \(.value.current) ‚Üí \(.value.latest)"'
            
            # Save update info
            echo "$OUTDATED" > /tmp/outdated.json
          fi

      - name: Create Update Branch
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          BRANCH_NAME="chore/update-deps-${{ matrix.package }}-$(date +%Y%m%d)"
          git checkout -b "$BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Update Dependencies
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          cd packages/${{ matrix.package }}
          
          # Update non-major versions only (safer)
          npm update --save
          
          # Update devDependencies
          npm update --save-dev

      - name: Build and Test
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          cd packages/${{ matrix.package }}
          
          # Attempt to build
          if npm run build; then
            echo "‚úÖ Build successful"
            echo "build_success=true" >> $GITHUB_ENV
          else
            echo "‚ùå Build failed - updates may be breaking"
            echo "build_success=false" >> $GITHUB_ENV
          fi

      - name: Commit Changes
        if: steps.updates.outputs.has_updates == 'true' && env.build_success == 'true'
        run: |
          git add packages/${{ matrix.package }}/package*.json
          
          # Create commit message with updated packages
          COMMIT_MSG="chore(deps): update ${{ matrix.package }} dependencies

          Automated dependency update:
          $(cat /tmp/outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) ‚Üí \(.value.latest)"' || echo '- See package.json for details')
          
          Build tested and passed."
          
          git commit -m "$COMMIT_MSG"

      - name: Push Branch
        if: steps.updates.outputs.has_updates == 'true' && env.build_success == 'true'
        run: |
          git push origin "${{ env.branch_name }}"

      - name: Create Pull Request
        if: steps.updates.outputs.has_updates == 'true' && env.build_success == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let outdated = {};
            try {
              outdated = JSON.parse(fs.readFileSync('/tmp/outdated.json', 'utf8'));
            } catch (e) {
              console.log('Could not read outdated.json');
            }
            
            const updates = Object.entries(outdated)
              .map(([pkg, info]) => `- \`${pkg}\`: ${info.current} ‚Üí ${info.latest}`)
              .join('\n');
            
            const body = `## üîÑ Automated Dependency Updates

            This PR updates dependencies for **${{ matrix.package }}**.

            ### Updated Packages
            ${updates || 'See package.json for details'}

            ### Changes
            - ‚úÖ Non-major version updates only
            - ‚úÖ Build tested and passed
            - ‚ö†Ô∏è Please review changes before merging
            - ‚ö†Ô∏è Test manually if this includes UI library updates

            ### Type
            This is a **patch** release (dependency updates).

            ---
            <sub>ü§ñ This PR was automatically created by the dependency update workflow.</sub>`;

            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore(deps): Update ${{ matrix.package }} dependencies`,
              head: '${{ env.branch_name }}',
              base: 'main',
              body: body
            });

      - name: Comment on Failed Build
        if: steps.updates.outputs.has_updates == 'true' && env.build_success == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Create an issue about failed dependency updates
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `‚ö†Ô∏è Dependency updates failed for ${{ matrix.package }}`,
              body: `## Dependency Update Failed

              Attempted to update dependencies for **${{ matrix.package }}**, but the build failed.

              This likely indicates breaking changes in one or more dependencies.

              ### Action Required
              1. Review the failed workflow run
              2. Manually update dependencies
              3. Fix any breaking changes
              4. Test thoroughly

              ### Workflow Run
              ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

              ---
              <sub>ü§ñ This issue was automatically created by the dependency update workflow.</sub>`,
              labels: ['dependencies', 'help wanted']
            });
            
            console.log(`Created issue #${issue.data.number}`);

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - MuiMultiDateRangePicker
          - MuiMultiDateRangePickerPro
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          cd packages/${{ matrix.package }}
          npm ci

      - name: Run Security Audit
        id: audit
        run: |
          cd packages/${{ matrix.package }}
          
          # Run audit and capture output
          if npm audit --json > /tmp/audit.json; then
            echo "‚úÖ No vulnerabilities found"
            echo "has_vulnerabilities=false" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è Vulnerabilities found"
            echo "has_vulnerabilities=true" >> $GITHUB_OUTPUT
            
            # Check severity
            CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' /tmp/audit.json)
            HIGH=$(jq '.metadata.vulnerabilities.high // 0' /tmp/audit.json)
            
            echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
            echo "high=$HIGH" >> $GITHUB_OUTPUT
          fi

      - name: Create Security Issue
        if: steps.audit.outputs.has_vulnerabilities == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const critical = '${{ steps.audit.outputs.critical }}';
            const high = '${{ steps.audit.outputs.high }}';
            
            const severity = critical > 0 ? 'üö® CRITICAL' : high > 0 ? '‚ö†Ô∏è HIGH' : '‚ÑπÔ∏è MODERATE';
            
            // Check if similar issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security'
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Security vulnerabilities in ${{ matrix.package }}')
            );
            
            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `## Updated Security Scan Results

                **Package**: ${{ matrix.package }}
                **Severity**: ${severity}
                **Critical**: ${critical}
                **High**: ${high}

                Run \`npm audit\` in the package directory for details.

                **Scanned**: ${new Date().toISOString()}
                `
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `${severity} Security vulnerabilities in ${{ matrix.package }}`,
                body: `## Security Vulnerabilities Detected

                **Package**: ${{ matrix.package }}
                **Severity**: ${severity}
                **Critical**: ${critical}
                **High**: ${high}

                ### Action Required
                1. Review vulnerabilities: \`cd packages/${{ matrix.package }} && npm audit\`
                2. Update affected packages: \`npm audit fix\`
                3. For breaking changes: \`npm audit fix --force\` (test thoroughly!)
                4. If no fix available, consider alternatives or accept risk

                ### Commands
                \`\`\`bash
                cd packages/${{ matrix.package }}
                npm audit
                npm audit fix
                \`\`\`

                ---
                <sub>ü§ñ This issue was automatically created by the security audit workflow.</sub>
                `,
                labels: ['security', 'dependencies']
              });
            }


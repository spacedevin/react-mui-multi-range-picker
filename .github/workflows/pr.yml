name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: Validate PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            chore
            ci
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            Subject must start with lowercase.
            
            ✅ feat: add feature
            ✅ fix: resolve bug
            ❌ feat: Add feature

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [MuiMultiDateRangePicker, MuiMultiDateRangePickerPro]
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install Dependencies
        run: |
          cd packages/${{ matrix.package }}
          bun install
      
      - name: Run Tests with Coverage
        run: |
          cd packages/${{ matrix.package }}
          bun test --coverage --coverage-reporter=lcov
      
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/${{ matrix.package }}/coverage/lcov.info
          flags: ${{ matrix.package }}
          name: ${{ matrix.package }}-coverage
          fail_ci_if_error: false

  build:
    name: Build Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [MuiMultiDateRangePicker, MuiMultiDateRangePickerPro]
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install & Build
        run: |
          cd packages/${{ matrix.package }}
          bun install
          bun run build
      
      - name: Type Check
        run: |
          cd packages/${{ matrix.package }}
          bunx tsc -p tsconfig.build.json --noEmit
      
      - name: Test Publish
        run: |
          cd packages/${{ matrix.package }}
          npm publish --dry-run


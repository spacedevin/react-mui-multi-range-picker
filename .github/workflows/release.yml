name: Release Package

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
      package-dir:
        required: true
        type: string
      manual-version:
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Check if changed
        if: inputs.manual-version == ''
        id: changed
        run: |
          LAST_TAG=$(git tag -l "${{ inputs.package-name }}@*" | sort -V | tail -1)
          if [ -z "$LAST_TAG" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            CHANGES=$(git diff --name-only $LAST_TAG HEAD -- packages/${{ inputs.package-dir }} | wc -l)
            [ "$CHANGES" -gt "0" ] && echo "changed=true" >> $GITHUB_OUTPUT || echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Release
        if: steps.changed.outputs.changed == 'true' || inputs.manual-version != ''
        id: release
        run: |
          cd packages/${{ inputs.package-dir }}
          
          # Determine version
          if [ -n "${{ inputs.manual-version }}" ]; then
            VERSION="${{ inputs.manual-version }}"
          else
            CURRENT=$(node -p "require('./package.json').version")
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
            VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          fi
          
          echo "Releasing version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Build and publish
          npm ci
          npm version $VERSION --no-git-tag-version
          npm run build
          npm publish --access public
          
          # Tag and push
          cd ../..
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          TAG="${{ inputs.package-name }}@$VERSION"
          git add packages/${{ inputs.package-dir }}/package*.json
          git commit -m "chore(release): $TAG" || true
          git tag -a "$TAG" -m "$TAG"
          git push origin main --follow-tags || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changed.outputs.changed == 'true' || inputs.manual-version != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ inputs.package-name }}@${{ steps.release.outputs.version }}"
          name: "${{ inputs.package-dir }} v${{ steps.release.outputs.version }}"
          body: |
            ```bash
            npm install ${{ inputs.package-name }}@${{ steps.release.outputs.version }}
            ```

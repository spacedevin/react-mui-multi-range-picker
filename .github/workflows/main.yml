name: Main

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  check:
    name: Check if Release Needed
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Commit Message
        id: check
        run: |
          MSG=$(git log -1 --pretty=%B)
          if [[ "$MSG" == chore:*release* ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "Skipping - this is a release commit"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release Packages
    needs: check
    if: needs.check.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.publish.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Bump & Publish
        id: publish
        run: |
          set -e  # Exit on any error
          MSG=$(git log -1 --pretty=%B)
          
          # Determine bump type
          if echo "$MSG" | grep -qE "^feat.*!:|BREAKING CHANGE:"; then
            BUMP="major"
          elif echo "$MSG" | grep -qE "^feat(\(|:)"; then
            BUMP="minor"
          else
            BUMP="patch"
          fi
          
          # Get current version from pro package (use as source of truth)
          LATEST=$(npm view @spacedevin/react-mui-pro-multi-range-picker version 2>/dev/null || echo "0.0.0")
          IFS='.' read -r M N P <<< "$LATEST"
          case $BUMP in
            major) VER="$((M + 1)).0.0" ;;
            minor) VER="$M.$((N + 1)).0" ;;
            patch) VER="$M.$N.$((P + 1))" ;;
          esac
          
          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "Publishing both packages at version: $VER (from $LATEST, bump: $BUMP)"
          
          # Free Package
          cd packages/MuiMultiDateRangePicker
          npm ci
          npm version $VER --no-git-tag-version
          npm run build
          npm publish --access public
          
          # Pro Package
          cd ../MuiMultiDateRangePickerPro
          npm ci
          npm version $VER --no-git-tag-version
          npm run build
          npm publish --access public
          
          # Commit and tag
          cd ../..
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/*/package*.json
          git commit -m "chore: release v$VER"
          git tag -a "v$VER" -m "Release v$VER"
          git push origin main --follow-tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: success()
        run: |
          VER="${{ steps.publish.outputs.version }}"
          
          gh release create "v$VER" \
            --title "v$VER" \
            --notes "**Packages Released:**
          
          - \`@spacedevin/react-mui-multi-range-picker@$VER\`
          - \`@spacedevin/react-mui-pro-multi-range-picker@$VER\`
          
          Published to NPM" \
            --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-pages:
    name: Deploy to GitHub Pages
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Demo Pages
        run: |
          # Build free package demo
          cd packages/MuiMultiDateRangePicker
          npm run demo:sync
          cd examples/demo
          npm ci
          npm run build
          
          # Build pro package demo
          cd ../../../MuiMultiDateRangePickerPro
          npm run demo:sync
          cd examples/demo
          npm ci
          npm run build
          
          # Create gh-pages directory structure
          cd ../../../../..
          mkdir -p gh-pages/free gh-pages/pro
          
          # Copy demos
          cp -r packages/MuiMultiDateRangePicker/examples/demo/build/* gh-pages/free/
          cp -r packages/MuiMultiDateRangePickerPro/examples/demo/build/* gh-pages/pro/
          
          # Create landing page
          cat > gh-pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>MUI Multi Range Date Picker</title>
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
              h1 { color: #1976d2; }
              .demo-links { display: flex; gap: 20px; margin-top: 30px; }
              .demo-link { 
                padding: 20px; 
                border: 2px solid #1976d2; 
                border-radius: 8px; 
                text-decoration: none; 
                color: #1976d2;
                text-align: center;
                flex: 1;
              }
              .demo-link:hover { background: #e3f2fd; }
            </style>
          </head>
          <body>
            <h1>MUI Multi Range Date Picker Demos</h1>
            <p>Interactive demos of the free and pro versions.</p>
            <div class="demo-links">
              <a href="./free/" class="demo-link">
                <h3>Free Version</h3>
                <p>Basic multi-range date picker</p>
              </a>
              <a href="./pro/" class="demo-link">
                <h3>Pro Version</h3>
                <p>With chip management & advanced features</p>
              </a>
            </div>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
